name: build-boxkit-browsers
on:
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * TUE'
  push:
    branches:
      - main
    paths-ignore:
      - '**/README.md'
env:
    IMAGE_NAME: boxkit-browsers
    IMAGE_TAGS: latest
    IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  push-ghcr:
    name: Build and push image
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
      id-token: write
    strategy:
      fail-fast: false
    steps:
      # Checkout push-to-registry action GitHub repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v3

      # Build metadata
      - name: Image Metadata
        uses: docker/metadata-action@v4
        id: meta
        with:
          images: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/azmodude/boxkit/main/README.md
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha

      # Build image using Docker action
      -   name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        id: docker_build
        with:
          context: .
          file: ${{ env.IMAGE_NAME }}/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign container
      - uses: sigstore/cosign-installer@v3.0.2
      - name: Sign container image
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}@${DIGEST}
        env:
          DIGEST: ${{ steps.docker_build.outputs.digest }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{secrets.COSIGN_PASSWORD}}

